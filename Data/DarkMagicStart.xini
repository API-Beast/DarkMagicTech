[Object]
ID = #Player
Tags = [IsPlayer, In(#Cell), Hungry] 

[Object]
ID = #Guard
Tags = [IsStartGuard, In(#Cell), Dead]

[Object]
ID = #Cell
Tags = IsLocation

[Object]
ID = #Hallway
Tags = IsLocation

Event
{
	Text = "You wake up, weak, hungry, cold. In front of you a is a door, out of solid iron bars. On the other side is a long hallway, dimly lit by torches. You look down, and see a guard leaning back on the cell door, he is not moving."
	
	Priority = 1000
	MaxExecutions = 1
}

[Rule]
Takes: $LocationA = IsLocation
Takes: $LocationB = IsLocation
Takes:   $Subject = [In($LocationA), In($LocationB)]
Changes: $Subject = !In($LocationB)
Text = "WARNING: Object was in 2 locations at the same time, fixed that."

[Rule]
Takes: $Location = IsLocation
Takes: $A = In($Location)
Takes: $B = In($Location)
Implies: $A = Near($B)
Implies: $B = Near($A)

Action
{
	PlayerAction=["Look at guard", "Look at corpse", "Look at body", "Examine guard", "Examine body", "Examine corpse"]
	Needs: #Player = Near(#Guard)
	Changes = KnowsAboutGuard
	
	Rule
	{
		; Display at start of text
		ResultOrder = +1
	
		[Result]
		MaxExecutions = 1
		Priority =  30
		Text = "You carefully reach for the guard, his skin is cold and he doesn't appear to be breathing."
	
		[Result]
		MaxExecutions = 1
		Priority =  20
		Text = "The guard lies there, dead, cold."
		
		[Result]
		MaxExecutions = 1
		Priority =  10
		Text = "You turn your thoughts towards the dead guard."
		
		[Result]
		Priority = -1
		Text = "The guard is still lying there."
	}
	
	Rule
	{
		; Display at end of text
		ResultOrder = -1
	
		[Result]
		MaxExecutions = 1
		Priority =  1
		Text = "A bite mark decorates his shoulder."
		
		[Result]
		MaxExecutions = 1
		Priority =  1
		Text = "You have no clue what killed him."
		
		Result{}
	}
	
	Result
	{
		Text = "At his belt is a chain of keys and a short sword. "
		Needs: #Player = [!HasCellDoorKeys, !HasShortSword]
	}

	Result
	{
		Text = "His short sword is within reach."
		Needs: #Player = [HasCellDoorKeys, !HasShortSword]
	}
	
	Result
	{
		Text = "You have taken everything useful from him."
		Needs: #Player = [HasCellDoorKeys, HasShortSword]
	}
}

Action
{
	PlayerAction = ["Walk Forward", "Continue", "Advance"]
	
	Result
	{
		Needs: #Player = In(#Cell)
		
		[Result]
		Needs = !CellDoorUnlocked
		Text  = "The door is locked." 
		
		[Result]
		Needs   = CellDoorUnlocked
		Text    = "You move through the door into the hallway."
		Changes: #Player = [In(#Hallway), !In(#Cell)]
	}
	
	Result
	{
		Needs: #Player = In(#Hallway)
		
		[Result]
		Text  = "You walk through the hallway, dimly lit by the torches. You are now in front of a solid wooden door. It is iron shod."
		Needs: #Player = !AtEndOfHallway
		Changes: #Player = AtEndOfHallway
		
		[Result]
		Text  = "No matter how much you press, the door in front of you is not opening."
		Needs: #Player = AtEndOfHallway
	}
}

Action
{
	PlayerAction=["Pick up Keys", "Take Keys"]
	Text="You croutch to snatch the keyring from the dead body."

	Changes: #Player    =   HasCellDoorKeys
	Needs:   #Player    = [!HasCellDoorKeys, Near(#Guard)]
	Needs = [NearGuard, KnowsAboutGuard]
}

Action
{
	PlayerAction = ["Pick up Sword", "Take Sword"]
	Text = "You take the sword of the guard."

	Needs = KnowsAboutGuard
	Changes: #Player    =   HasShortSword
	Needs:   #Player    = [!HasShortSword, Near(#Guard)]
}

Action
{
	PlayerAction = ["Open Door", "Push Open Door"]
	Needs = !CellDoorOpen
	Needs: #Player = In(#Cell)

	Result
	{
		Text = "You open the cell door and move through it."
		
		Changes = CellDoorOpen
		Needs   = CellDoorUnlocked
	}

	Result
	{
		Text = "You try out different keys until you find one that fits. One "Clack" and the door moves and you leap out into the hallway."
		
		Changes = [CellDoorUnlocked, CellDoorOpen]
		Needs   = !CellDoorUnlocked
		Needs: #Player = HasCellDoorKeys
	}

	Result
	{
		Text = "The door doesn't budge a inch. You notice the key hole."
		
		Needs = !CellDoorUnlocked
		Needs: #Player = !HasCellDoorKeys
	}
}

Action
{
	PlayerAction = "Go back into cell"
	Needs: #Player = In(#Hallway)
	Needs = CellDoorUnlocked
	
	Result
	{
		Changes: #Player = [!In(#Hallway), In(#Cell)]
		Text = "You move back into the cell..."
		
		[Rule]
		MaxExecutions=1
		Text = "Have you forgotten something?"
	}
}

Action
{
	PlayerAction = "Unlock Door"
	Text = "You try out different keys until you find one that fits. One "Clack" and the door unlocks."

	Changes = CellDoorUnlocked
	Needs   = [In(#Cell), !CellDoorUnlocked]
	Needs: #Player = HasCellDoorKeys
}